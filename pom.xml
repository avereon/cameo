<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.avereon.pom</groupId>
		<artifactId>jar</artifactId>
		<version>3.5.4</version>
		<relativePath/>
	</parent>

	<groupId>com.avereon</groupId>
	<artifactId>cameo</artifactId>
	<version>2.10</version>
	<packaging>maven-plugin</packaging>

	<name>Cameo</name>
	<description>A Maven plugin to save Avereon ProgramImage objects as image files.</description>
	<inceptionYear>2019</inceptionYear>

	<developers>
		<developer>
			<name>Mark Soderquist</name>
			<email>mark@soderquist.net</email>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<repositories>
		<repository>
			<id>avn</id>
			<url>https://repo.avereon.com/avn</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>avn-plugin</id>
			<url>https://repo.avereon.com/avn</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<!-- Version numbers updated 07 Mar 2023 -->

		<!-- Needs to stay at a version compatible with all maven builds -->
		<!-- Keep consistent with the CI pipeline -->
		<java.version>17</java.version>

		<!-- Runtime dependencies -->
		<zenna.version>0.9</zenna.version>
		<image4j.version>0.7.2</image4j.version>
		<maven.project.version>2.2.1</maven.project.version>
		<maven.plugin.api.version>3.9.9</maven.plugin.api.version>
		<maven.plugin.annotations.version>3.15.0</maven.plugin.annotations.version>
		<openjfx.version>23</openjfx.version>
		<slf4j.version>2.0.6</slf4j.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>zenna</artifactId>
			<version>${zenna.version}</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-swing</artifactId>
			<version>${openjfx.version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.image4j</groupId>
			<artifactId>image4j</artifactId>
			<version>${image4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>${maven.project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.plugin.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>${maven.plugin.annotations.version}</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>source/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>compile</includeScope>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<configuration>
					<goalPrefix>${project.artifactId}</goalPrefix>
				</configuration>
				<executions>
					<execution>
						<id>default-descriptor</id>
						<phase>process-classes</phase>
					</execution>
					<!-- generate help goal -->
					<execution>
						<id>help-goal</id>
						<goals>
							<goal>helpmojo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
